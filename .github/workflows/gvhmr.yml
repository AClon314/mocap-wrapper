name: gvhmr
on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
    paths:
      - "docker/gvhmr/**"
      - ".github/workflows/gvhmr.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "docker/gvhmr/**"
      - ".github/workflows/gvhmr.yml"
  workflow_dispatch:

env:
  NAME: gvhmr

jobs:
  gvhmr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - run: df -h
      - name: Checkout
        uses: actions/checkout@v4

      - name: A→a lowercased
        id: lower
        run: |
          echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
          echo "actor=${GITHUB_ACTOR,,}" >> $GITHUB_OUTPUT
          echo "dockerhub=${DOCKERHUB_USERNAME,,}" >> $GITHUB_OUTPUT
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ steps.lower.outputs.dockerhub }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.lower.outputs.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}
            ${{ steps.lower.outputs.dockerhub }}/${{ env.NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=raw,value=${{ github.ref_name }}-${{ github.sha }},enable=true
            type=raw,value=${{ steps.date.outputs.date }},enable=true
          # 明确传入 token（动作内部可能需要）
          github-token: ${{ secrets.GITHUB_TOKEN }}
          context: workflow

      - uses: ./.github/actions/if_clean

      - name: 💾Cache model_weights
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: docker/${{ env.NAME }}/${{ env.NAME }}.dockerfile
          target: model_weights # 只构建到此阶段
          push: false
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:model_weights
          cache-to: |
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:model_weights,compression=zstd
          build-args: |
            HF_TOKEN=${{ secrets.HF_TOKEN }}

      - uses: ./.github/actions/if_clean

      - name: 💾Cache git repo & pytorch env
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: docker/${{ env.NAME }}/${{ env.NAME }}.dockerfile
          target: py_env # 只构建到此阶段
          push: false
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:py_env
          cache-to: |
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:py_env,compression=zstd
          build-args: |
            HF_TOKEN=${{ secrets.HF_TOKEN }}

      - uses: ./.github/actions/if_clean
        with:
          remain_gb: 21

      - name: 🔨Build & push
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: docker/${{ env.NAME }}/${{ env.NAME }}.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            HF_TOKEN=${{ secrets.HF_TOKEN }}
          # cache 配置：>10GB, 用 registry（GHCR）。不压缩缓存以避免空间不足报错
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:model_weights
            type=registry,ref=ghcr.io/${{ steps.lower.outputs.owner }}/${{ env.NAME }}:py_env

      - run: df -h
        if: always()
